Index: module-home/src/main/java/com/example/module_home/navigation/one/FragmentOne.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.module_home.navigation.one\r\n\r\nimport android.animation.Animator\r\nimport android.animation.AnimatorSet\r\nimport android.animation.ObjectAnimator\r\nimport android.view.View\r\nimport com.example.module_home.*\r\nimport com.hjq.toast.ToastUtils\r\nimport com.standalone.core.base.ui.frag.BaseLayoutFragment\r\nimport dagger.hilt.android.AndroidEntryPoint\r\nimport kotlinx.android.synthetic.main.frag_one.*\r\nimport javax.inject.Inject\r\n\r\n@AndroidEntryPoint\r\nclass FragmentOne : BaseLayoutFragment<FragOneViewModel>() {\r\n\r\n    @A\r\n    @Inject\r\n    lateinit var userA: User\r\n\r\n    @B\r\n    @Inject\r\n    lateinit var userB: User\r\n\r\n\r\n    override fun createViewModel(): Class<FragOneViewModel>? = FragOneViewModel::class.java\r\n\r\n    override fun layout(): Int {\r\n        return R.layout.frag_one\r\n    }\r\n\r\n    override fun bindView(rootView: View) {\r\n\r\n//        ToastUtils.show(\"${userA.getName()} -- ${userB.getName()}\")\r\n\r\n        one.setOnClickListener {\r\n////            val bundle = Bundle()\r\n////            bundle.putString(\"name\", \"345\")\r\n            ToastUtils.show(\"动\")\r\n//            Navigation.findNavController(rootView).navigate(R.id.fragmentThree)\r\n            /*\r\n             one.animate()\r\n                 .translationY(dp2px(80f))\r\n                 .setStartDelay(1000)\r\n                 .start()*/\r\n\r\n\r\n            /* val anim = ObjectAnimator\r\n                 .ofFloat(sport, \"ScrollPos\", 0f, 270f, 360f)\r\n                 .setDuration(1000)\r\n             val proAnim = ObjectAnimator\r\n                 .ofInt(sport, \"Process\", 0, 100)\r\n                 .setDuration(1000)\r\n\r\n             val animSet = AnimatorSet()\r\n             animSet.playTogether(anim, proAnim)\r\n             animSet.start()*/\r\n\r\n\r\n            val bottomFlip = ObjectAnimator\r\n                .ofFloat(custom, \"bottomFlip\", 0f, 45f)\r\n            val rotation = ObjectAnimator\r\n                .ofFloat(custom, \"flipRotation\", 0f, 270f)\r\n\r\n            val topFlip = ObjectAnimator\r\n                .ofFloat(custom, \"topFlip\", 0f, -45f)\r\n\r\n            val animatorSet = AnimatorSet()\r\n            animatorSet.duration = 2000\r\n            animatorSet.playSequentially(bottomFlip, rotation, topFlip)\r\n            animatorSet.start()\r\n\r\n\r\n\r\n\r\n            bottomFlip.addListener(object : Animator.AnimatorListener {\r\n                override fun onAnimationRepeat(animation: Animator?) {\r\n\r\n                }\r\n\r\n                override fun onAnimationEnd(animation: Animator?) {\r\n                    val set = AnimatorSet()\r\n\r\n//                    val bottom = ObjectAnimator\r\n//                        .ofFloat(custom, \"bottomFlip\", 90f, 0f)\r\n//\r\n//                    val ro = ObjectAnimator\r\n//                        .ofFloat(custom, \"flipRotation\", 0f, 45f)\r\n//                    val top = ObjectAnimator\r\n//                        .ofFloat(custom, \"topFlip\", 0f, -90f, 0f)\r\n//                        .setDuration(1500)\r\n//                    set.duration = 2000\r\n//                    set.playTogether( ro, top)\r\n//                    set.start()\r\n                }\r\n\r\n                override fun onAnimationCancel(animation: Animator?) {\r\n\r\n                }\r\n\r\n                override fun onAnimationStart(animation: Animator?) {\r\n\r\n                }\r\n\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- module-home/src/main/java/com/example/module_home/navigation/one/FragmentOne.kt	(revision c005a0d93498645e5c8dd0ccd6969e045c59c34b)
+++ module-home/src/main/java/com/example/module_home/navigation/one/FragmentOne.kt	(date 1594211066848)
@@ -14,15 +14,6 @@
 @AndroidEntryPoint
 class FragmentOne : BaseLayoutFragment<FragOneViewModel>() {
 
-    @A
-    @Inject
-    lateinit var userA: User
-
-    @B
-    @Inject
-    lateinit var userB: User
-
-
     override fun createViewModel(): Class<FragOneViewModel>? = FragOneViewModel::class.java
 
     override fun layout(): Int {
Index: module-home/src/main/java/com/example/module_home/UserAnnotation.kt
===================================================================
--- module-home/src/main/java/com/example/module_home/UserAnnotation.kt	(revision c005a0d93498645e5c8dd0ccd6969e045c59c34b)
+++ module-home/src/main/java/com/example/module_home/UserAnnotation.kt	(revision c005a0d93498645e5c8dd0ccd6969e045c59c34b)
@@ -1,9 +0,0 @@
-package com.example.module_home
-
-import javax.inject.Qualifier
-
-@Qualifier
-annotation class A
-
-@Qualifier
-annotation class B
\ No newline at end of file
Index: module-home/src/main/java/com/example/module_home/UserBImpl.kt
===================================================================
--- module-home/src/main/java/com/example/module_home/UserBImpl.kt	(revision c005a0d93498645e5c8dd0ccd6969e045c59c34b)
+++ module-home/src/main/java/com/example/module_home/UserBImpl.kt	(revision c005a0d93498645e5c8dd0ccd6969e045c59c34b)
@@ -1,9 +0,0 @@
-package com.example.module_home
-
-import javax.inject.Inject
-
-class UserBImpl @Inject constructor() : User {
-    override fun getName(): String {
-        return "Lv"
-    }
-}
\ No newline at end of file
Index: module-home/src/main/java/com/example/module_home/User.kt
===================================================================
--- module-home/src/main/java/com/example/module_home/User.kt	(revision c005a0d93498645e5c8dd0ccd6969e045c59c34b)
+++ module-home/src/main/java/com/example/module_home/User.kt	(revision c005a0d93498645e5c8dd0ccd6969e045c59c34b)
@@ -1,5 +0,0 @@
-package com.example.module_home
-
-interface User {
-    fun getName(): String
-}
\ No newline at end of file
Index: module-home/src/main/java/com/example/module_home/Test.kt
===================================================================
--- module-home/src/main/java/com/example/module_home/Test.kt	(revision c005a0d93498645e5c8dd0ccd6969e045c59c34b)
+++ module-home/src/main/java/com/example/module_home/Test.kt	(revision c005a0d93498645e5c8dd0ccd6969e045c59c34b)
@@ -1,3 +0,0 @@
-package com.example.module_home
-
-class Test
\ No newline at end of file
Index: module-home/src/main/java/com/example/module_home/UserModule.kt
===================================================================
--- module-home/src/main/java/com/example/module_home/UserModule.kt	(revision c005a0d93498645e5c8dd0ccd6969e045c59c34b)
+++ module-home/src/main/java/com/example/module_home/UserModule.kt	(revision c005a0d93498645e5c8dd0ccd6969e045c59c34b)
@@ -1,23 +0,0 @@
-package com.example.module_home
-
-import dagger.Binds
-import dagger.Module
-import dagger.hilt.InstallIn
-import dagger.hilt.android.components.ApplicationComponent
-
-@Module
-@InstallIn(ApplicationComponent::class)
-abstract class UserAModule {
-    @A
-    @Binds
-    abstract fun getUserA(userImpl: UserAImpl): User
-}
-
-@Module
-@InstallIn(ApplicationComponent::class)
-abstract class UserBModule {
-
-    @B
-    @Binds
-    abstract fun getUserB(userImpl: UserBImpl): User
-}
\ No newline at end of file
Index: module-home/src/main/java/com/example/module_home/UserAImpl.kt
===================================================================
--- module-home/src/main/java/com/example/module_home/UserAImpl.kt	(revision c005a0d93498645e5c8dd0ccd6969e045c59c34b)
+++ module-home/src/main/java/com/example/module_home/UserAImpl.kt	(revision c005a0d93498645e5c8dd0ccd6969e045c59c34b)
@@ -1,9 +0,0 @@
-package com.example.module_home
-
-import javax.inject.Inject
-
-class UserAImpl @Inject constructor() : User {
-    override fun getName(): String {
-        return "345"
-    }
-}
\ No newline at end of file
Index: module-home/src/main/java/com/example/module_home/HiltTest.kt
===================================================================
--- module-home/src/main/java/com/example/module_home/HiltTest.kt	(revision c005a0d93498645e5c8dd0ccd6969e045c59c34b)
+++ module-home/src/main/java/com/example/module_home/HiltTest.kt	(revision c005a0d93498645e5c8dd0ccd6969e045c59c34b)
@@ -1,12 +0,0 @@
-package com.example.module_home
-
-import android.util.Log
-import javax.inject.Inject
-
-class HiltTest @Inject constructor() {
-
-    fun hiltTest(): String {
-        Log.e("-------->", "hiltTest: ")
-        return "首页"
-    }
-}
\ No newline at end of file
Index: module-home/src/main/java/com/example/module_home/TestModule.kt
===================================================================
--- module-home/src/main/java/com/example/module_home/TestModule.kt	(revision c005a0d93498645e5c8dd0ccd6969e045c59c34b)
+++ module-home/src/main/java/com/example/module_home/TestModule.kt	(revision c005a0d93498645e5c8dd0ccd6969e045c59c34b)
@@ -1,33 +0,0 @@
-package com.example.module_home
-
-import com.elvishew.xlog.XLog
-import dagger.Module
-import dagger.Provides
-import dagger.hilt.InstallIn
-import dagger.hilt.android.components.ApplicationComponent
-import javax.inject.Singleton
-
-@Module
-@InstallIn(ApplicationComponent::class)
-object TestModule {
-
-    /**
-     * 每次都是新的实例
-     */
-    @Provides
-    fun bindHiltTest(): HiltTest {
-        XLog.e("--------bindHiltTest----")
-        return HiltTest()
-    }
-
-    /**
-     * 全局复用同一个实例
-     */
-    @Provides
-    @Singleton
-    fun bindSingTest(): Test {
-        XLog.e("--------bindSingTest----")
-        return Test()
-    }
-
-}
\ No newline at end of file
